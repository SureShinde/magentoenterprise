<?php
/**
 * Nucleus
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Nucleus License
 * that is bundled with this package in the file LICENSE_NUCLEUS.txt.
 * It is also available through the World Wide Web at this URL:
 * http://www.nucleuscommerce.com/license
 * If you did not receive a copy of the license and are unable to
 * obtain it through the World Wide Web, please send an email
 * to support@nucleuscommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Nucleus
 * to newer versions in the future.
 *
 * @category   CLS
 * @package    NucleusCore
 * @copyright  Copyright (c) 2015 Nucleus Commerce, LLC (http://www.nucleuscommerce.com)
 * @license    http://www.nucleuscommerce.com/license
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
?>
<?php
$_productCollection=$this->getLoadedProductCollection();
$_helper = $this->helper('catalog/output');
?>
<?php if(!$_productCollection->count()): ?>
    <p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
    <div class="category-products">
        <?php echo $this->getToolbarHtml() ?>
        <?php // List mode ?>
        <?php if($this->getMode()!='grid'): ?>
            <?php $_iterator = 0; ?>
            <ol class="products-list" id="products-list">
                <?php foreach ($_productCollection as $_product): ?>
                    <li class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?>">
                        <?php // Product Image ?>
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                            <?php /* Based on the native RWD styling, product images are displayed at a max of ~400px wide when viewed on a
                        one column page layout with four product columns from a 1280px viewport. For bandwidth reasons,
                        we are going to serve a 300px image, as it will look fine at 400px and most of the times, the image
                        will be displayed at a smaller size (eg, if two column are being used or viewport is smaller than 1280px).
                        This $_imgSize value could even be decreased further, based on the page layout
                        (one column, two column, three column) and number of product columns. */ ?>
                            <?php $_imgSize = 300; ?>
                            <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                                 src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->keepFrame(false)->resize($_imgSize); ?>"
                                 alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                        </a>

                        <?php
                        if ($this->getChild('image.after')) {
                            $_imageAfterChildren = $this->getChild('image.after')->getSortedChildren();
                            foreach ($_imageAfterChildren as $_imageAfterChildName) {
                                $_imageAfterChild = $this->getChild('image.after')->getChild($_imageAfterChildName);
                                $_imageAfterChild->setProduct($_product);
                                echo $_imageAfterChild->toHtml();
                            }
                        }
                        ?>

                        <?php // Product description ?>
                        <div class="product-shop">
                            <div class="f-fix">
                                <div class="product-primary">
                                    <?php $_productNameStripped = $this->stripTags($_product->getName(), null, true); ?>
                                    <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped; ?>"><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a></h2>

                                    <div class="toto" style="text-align: center; display:inline-block;">
                                        <?php $this->helper('yotpo')->showBottomline($this, $_product); ?>
                                    </div>
                                    <?php //if($_product->getRatingSummary()): ?>
                                        <?php //echo $this->getReviewsSummaryHtml($_product) ?>
                                    <?php //endif; ?>
                                    <?php
                                    // Provides extra blocks on which to hang some features for products in the list
                                    // Features providing UI elements targeting this block will display directly below the product name
                                    if ($this->getChild('name.after')) {
                                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                            $_nameAfterChild->setProduct($_product);
                                            echo $_nameAfterChild->toHtml();
                                        }
                                    }
                                    ?>
                                </div>
                                <div class="product-secondary">
                                    <?php echo $this->getPriceHtml($_product, true) ?>
                                </div>
                                <div class="product-secondary">
                                    <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                                        <p class="action"><a title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" href="<?php echo $this->getAddToCartUrl($_product) ?>" class="button add-button" data-product-id="<?php echo $_product->getId() ?>"><?php echo $this->__('Add to Cart') ?></a></p>
                                    <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                                        <p class="action"><a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a></p>
                                    <?php else: ?>
                                        <p class="action availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                                    <?php endif; ?>
                                    <ul class="add-to-links">
                                        <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                            <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                                        <?php endif; ?>
                                        <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                            <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                                        <?php endif; ?>
                                    </ul>
                                </div>
                                <div class="desc std">
                                    <?php echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?>
                                    <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped ?>" class="link-learn"><?php echo $this->__('Learn More') ?></a>
                                </div>
                            </div>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ol>
            <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>

        <?php else: ?>

        <?php // Grid Mode ?>

        <?php $_collectionSize = $_productCollection->count() ?>
        <?php $_columnCount = $this->getColumnCount(); ?>
            <ul class="products-grid products-grid--max-<?php echo $_columnCount; ?>-col">
                <?php $i=0; foreach ($_productCollection as $_product): ?>
                    <?php /*if ($i++%$_columnCount==0): ?>
            <?php endif*/ ?>
                    <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?>">
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                            <?php $_imgSize = 320; ?>
                            <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                                 src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>"
                                 alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                        </a>
                        <?php
                        if ($this->getChild('image.after')) {
                            $_imageAfterChildren = $this->getChild('image.after')->getSortedChildren();
                            foreach ($_imageAfterChildren as $_imageAfterChildName) {
                                $_imageAfterChild = $this->getChild('image.after')->getChild($_imageAfterChildName);
                                $_imageAfterChild->setProduct($_product);
                                echo $_imageAfterChild->toHtml();
                            }
                        }
                        ?>


                        <div class="product-info">
                            <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></a></h2>

                            <div class="toto" style="text-align: center; display:inline-block;">
                                <?php $this->helper('yotpo')->showBottomline($this, $_product); ?>
                            </div>

                            <?php
                            // Provides extra blocks on which to hang some features for products in the list
                            // Features providing UI elements targeting this block will display directly below the product name
                            if ($this->getChild('name.after')) {
                                $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                                foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                    $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                    $_nameAfterChild->setProduct($_product);
                                    echo $_nameAfterChild->toHtml();
                                }
                            }
                            ?>
                            <?php echo $this->getPriceHtml($_product, true) ?>
                            <div class="ts-list-price">
                                <?php $pro=Mage::getModel('catalog/product')->load($_product->getId());?>
                                <?php if ($pro->getListPrice()): ?>
                                    <?php $listClass = ''; ?>
                                    <?php if($pro->getListPrice() <= $pro->getFinalPrice()) : ?>
                                        <?php $listClass = 'no-strike'; ?>
                                    <?php endif; ?>
                                    <p class="list-price <?php echo $listClass; ?>"><?php echo $this->__('List Price: <span>%s</span>', Mage::helper('core')->formatCurrency($pro->getListPrice(), false)); ?></p>
                                <?php endif; ?>
                            </div>
                            <?php
                            // inventory scarity
                            $stocklevel = (int)Mage::getModel('cataloginventory/stock_item')
                                ->loadByProduct($_product)->getQty();
                            if ($stocklevel <20)
                            {
                                echo '<p style="color:red">Only '.$stocklevel.' left in stock – order soon</p>';
                            }
                            ?>
                            <br>
                            <?php //if($_product->getRatingSummary()): ?>
                                <?php //echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                            <?php //endif; ?>
                            <div class="actions">
                                <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                                    <a title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" href="<?php echo $this->getAddToCartUrl($_product) ?>" class="button add-button" data-product-id="<?php echo $_product->getId() ?>"><?php echo $this->__('Add to Cart') ?></a>
                                <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                                    <a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a>
                                <?php else: ?>
                                    <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                                <?php endif; ?>
                                <ul class="add-to-links">
                                    <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                        <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                                    <?php endif; ?>
                                    <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                        <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                                    <?php endif; ?>
                                </ul>
                            </div>
                        </div>
                    </li>
                    <?php /*if ($i%$_columnCount==0 || $i==$_collectionSize): ?>
            <?php endif*/ ?>
                <?php endforeach ?>
            </ul>
            <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>
        <?php endif; ?>

        <div class="toolbar-bottom">
            <?php echo $this->getToolbarHtml() ?>
        </div>
    </div>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
<!-- Criteo Tag -->
<?php
$cus_skus = "";
$i = 0;
$_productCollection=$this->getLoadedProductCollection();
foreach ($_productCollection as $_product){
    $product = Mage::getModel('catalog/product')->load($_product->getId());
    if ($cus_skus == "") {
        $cus_skus = '"' . $product->getSku() . '"';
    }else{
        $cus_skus = $cus_skus . ',"' . $product->getSku() . '"';
    }
    $i++;
    if ($i==3) {
        break;
    }
}
$cus_skus = "[" . $cus_skus . "]";
?>

<script type="text/javascript" src="//static.criteo.net/js/ld/ld.js" async="true"></script>
<script type="text/javascript">
    var items = <?php echo $cus_skus; ?>;
    window.criteo_q = window.criteo_q || [];
    window.criteo_q.push(
        { event: "setAccount", account: 38959 },
        { event: "setEmail", email: "" },
        { event: "setSiteType", type: "d" },
        { event: "viewList", item: items }
    );
</script>
<!-- Criteo Tag End -->